// Generated by view binder compiler. Do not edit!
package com.example.joinn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.joinn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChatRoomBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView chatRecyclerView;

  @NonNull
  public final LinearLayout inputLayout;

  @NonNull
  public final Button inviteBtn;

  @NonNull
  public final EditText messageEdit;

  @NonNull
  public final TextView nicknameTextView;

  @NonNull
  public final ImageView profileImageView;

  @NonNull
  public final AppCompatButton sendBtn;

  private FragmentChatRoomBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView chatRecyclerView, @NonNull LinearLayout inputLayout,
      @NonNull Button inviteBtn, @NonNull EditText messageEdit, @NonNull TextView nicknameTextView,
      @NonNull ImageView profileImageView, @NonNull AppCompatButton sendBtn) {
    this.rootView = rootView;
    this.chatRecyclerView = chatRecyclerView;
    this.inputLayout = inputLayout;
    this.inviteBtn = inviteBtn;
    this.messageEdit = messageEdit;
    this.nicknameTextView = nicknameTextView;
    this.profileImageView = profileImageView;
    this.sendBtn = sendBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChatRoomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChatRoomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chat_room, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChatRoomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chat_recyclerView;
      RecyclerView chatRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (chatRecyclerView == null) {
        break missingId;
      }

      id = R.id.input_layout;
      LinearLayout inputLayout = ViewBindings.findChildViewById(rootView, id);
      if (inputLayout == null) {
        break missingId;
      }

      id = R.id.inviteBtn;
      Button inviteBtn = ViewBindings.findChildViewById(rootView, id);
      if (inviteBtn == null) {
        break missingId;
      }

      id = R.id.message_edit;
      EditText messageEdit = ViewBindings.findChildViewById(rootView, id);
      if (messageEdit == null) {
        break missingId;
      }

      id = R.id.nicknameTextView;
      TextView nicknameTextView = ViewBindings.findChildViewById(rootView, id);
      if (nicknameTextView == null) {
        break missingId;
      }

      id = R.id.profileImageView;
      ImageView profileImageView = ViewBindings.findChildViewById(rootView, id);
      if (profileImageView == null) {
        break missingId;
      }

      id = R.id.send_btn;
      AppCompatButton sendBtn = ViewBindings.findChildViewById(rootView, id);
      if (sendBtn == null) {
        break missingId;
      }

      return new FragmentChatRoomBinding((LinearLayout) rootView, chatRecyclerView, inputLayout,
          inviteBtn, messageEdit, nicknameTextView, profileImageView, sendBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
