// Generated by view binder compiler. Do not edit!
package com.example.joinn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.joinn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Appname;

  @NonNull
  public final EditText EmailText;

  @NonNull
  public final EditText PasswordText;

  @NonNull
  public final Button joinbtn;

  @NonNull
  public final Button loginbtn;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Appname,
      @NonNull EditText EmailText, @NonNull EditText PasswordText, @NonNull Button joinbtn,
      @NonNull Button loginbtn) {
    this.rootView = rootView;
    this.Appname = Appname;
    this.EmailText = EmailText;
    this.PasswordText = PasswordText;
    this.joinbtn = joinbtn;
    this.loginbtn = loginbtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Appname;
      TextView Appname = ViewBindings.findChildViewById(rootView, id);
      if (Appname == null) {
        break missingId;
      }

      id = R.id.EmailText;
      EditText EmailText = ViewBindings.findChildViewById(rootView, id);
      if (EmailText == null) {
        break missingId;
      }

      id = R.id.PasswordText;
      EditText PasswordText = ViewBindings.findChildViewById(rootView, id);
      if (PasswordText == null) {
        break missingId;
      }

      id = R.id.joinbtn;
      Button joinbtn = ViewBindings.findChildViewById(rootView, id);
      if (joinbtn == null) {
        break missingId;
      }

      id = R.id.loginbtn;
      Button loginbtn = ViewBindings.findChildViewById(rootView, id);
      if (loginbtn == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, Appname, EmailText, PasswordText,
          joinbtn, loginbtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
