// Generated by view binder compiler. Do not edit!
package com.example.joinn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.joinn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.daum.mf.map.api.MapView;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button confirmButton;

  @NonNull
  public final EditText departureEditText;

  @NonNull
  public final EditText destinationEditText;

  @NonNull
  public final MapView searchContainer;

  private FragmentSearchBinding(@NonNull RelativeLayout rootView, @NonNull Button confirmButton,
      @NonNull EditText departureEditText, @NonNull EditText destinationEditText,
      @NonNull MapView searchContainer) {
    this.rootView = rootView;
    this.confirmButton = confirmButton;
    this.departureEditText = departureEditText;
    this.destinationEditText = destinationEditText;
    this.searchContainer = searchContainer;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirmButton;
      Button confirmButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmButton == null) {
        break missingId;
      }

      id = R.id.departureEditText;
      EditText departureEditText = ViewBindings.findChildViewById(rootView, id);
      if (departureEditText == null) {
        break missingId;
      }

      id = R.id.destinationEditText;
      EditText destinationEditText = ViewBindings.findChildViewById(rootView, id);
      if (destinationEditText == null) {
        break missingId;
      }

      id = R.id.search_container;
      MapView searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      return new FragmentSearchBinding((RelativeLayout) rootView, confirmButton, departureEditText,
          destinationEditText, searchContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
